#cloud-config

ssh_authorized_keys:
  - ${authorized_key}

runcmd:
  - apt-get update
  - curl -fsSL https://get.docker.com/ | sh
  - curl -fsSL https://get.docker.com/gpg | sudo apt-key add -
  - systemctl enable iptables.service
  - systemctl reload iptables.service
  - systemctl enable docker-tls-tcp.socket
  - systemctl enable dd-agent.service
  - systemctl start dd-agent.service

write_files:
- path: /etc/systemd/system/docker.service.d/10-dune.conf
  content: |
    [Service]
    ExecStart=
    ExecStart=/usr/bin/dockerd -H fd:// --iptables=false --icc=false --userns-remap=default
- path: /etc/systemd/system/docker-tls-tcp.socket
  content: |
    [Unit]
    Description=Docker Secured Socket for the API

    [Socket]
    ListenStream=2376
    BindIPv6Only=both
    Service=docker.service

    [Install]
    WantedBy=sockets.target
- path: /etc/systemd/system/dd-agent.service
  content: |
    [Unit]
    Description=Datadog Agent
    Requires=docker.service
    After=docker.service

    [Service]
    Restart=always
    EnvironmentFile=/etc/os-release
    ExecStartPre=-/usr/bin/docker stop dd-agent
    ExecStartPre=-/usr/bin/docker rm -f dd-agent
    ExecStartPre=/usr/bin/docker pull datadog/docker-dd-agent
    TimeoutStartSec=0
    ExecStartPre=-/usr/bin/docker kill dd-agent
    ExecStartPre=-/usr/bin/docker rm dd-agent
    ExecStart=/usr/bin/docker run --name dd-agent \
        -h %H \
        --privileged \
        --userns=host \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /proc/mounts:/host/proc/mounts:ro \
        -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \
        -e API_KEY=${datadog_key} \
        datadog/docker-dd-agent
    ExecStop=/usr/bin/docker stop dd-agent
- path: /etc/systemd/system/iptables.service
  content: |
    [Unit]
    Description=Packet Filtering Framework
    Before=network-pre.target
    Wants=network-pre.target

    [Service]
    Type=oneshot
    ExecStart=/sbin/iptables-restore /etc/iptables.rules
    ExecReload=/sbin/iptables-restore /etc/iptables.rules
    RemainAfterExit=yes

    [Install]
    WantedBy=multi-user.target
- path: /etc/iptables.rules
  content: |
    # Generated by iptables-save v1.6.0 on Fri Apr  7 03:10:55 2017
    *nat
    :PREROUTING ACCEPT [1181:63926]
    :INPUT ACCEPT [1132:60856]
    :OUTPUT ACCEPT [582:84908]
    :POSTROUTING ACCEPT [575:84488]
    :DOCKER - [0:0]
    -A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
    -A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
    -A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
    -A DOCKER -i docker0 -j RETURN
    COMMIT
    # Completed on Fri Apr  7 03:10:55 2017
    # Generated by iptables-save v1.6.0 on Fri Apr  7 03:10:55 2017
    *filter
    :INPUT ACCEPT [1635:145714]
    :FORWARD DROP [0:0]
    :OUTPUT ACCEPT [1267:240944]
    :DOCKER - [0:0]
    :DOCKER-ISOLATION - [0:0]
    -A INPUT -i docker0 -j DROP -m comment --comment "bridge to host"
    -A FORWARD -d 10.1.0.2/32 -j ACCEPT -m comment --comment "aws dns"
    -A FORWARD -d 10.0.0.0/8 ! -o docker0 -j DROP
    -A FORWARD -d 172.16.0.0/12 ! -o docker0 -j DROP
    -A FORWARD -d 169.254.0.0/16 ! -o docker0 -j DROP
    -A FORWARD -d 192.168.0.0/16 ! -o docker0 -j DROP
    -A FORWARD -j DOCKER-ISOLATION
    -A FORWARD -o docker0 -j DOCKER
    -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
    -A FORWARD -i docker0 -o docker0 -j DROP
    -A DOCKER-ISOLATION -j RETURN
    COMMIT
    # Completed on Fri Apr  7 03:10:55 2017
power_state:
  mode: reboot
  condition: true
